name: Build APK and Distribute to Firebase

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Verify Gradle wrapper
      run: ./gradlew --version
      
    - name: Create google-services.json from secret
      run: |
        if [ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json
          echo "✅ google-services.json created from secret"
          
          # Check if the secret contains the correct package name
          if grep -q "com.pillreminder.app" app/google-services.json; then
            echo "✅ Secret google-services.json contains correct package name"
          else
            echo "⚠️  Secret google-services.json does not contain correct package name"
            echo "Using template file instead"
            cp app/google-services.json.template app/google-services.json
            echo "✅ Template google-services.json copied"
          fi
        else
          echo "⚠️  GOOGLE_SERVICES_JSON secret not set, using template file"
          cp app/google-services.json.template app/google-services.json
          echo "✅ Template google-services.json copied"
        fi
        
        # Final verification
        if grep -q "com.pillreminder.app" app/google-services.json; then
          echo "✅ Final google-services.json contains correct package name"
        else
          echo "❌ google-services.json does not contain correct package name"
          echo "File contents:"
          cat app/google-services.json
          exit 1
        fi
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Build release APK
      run: ./gradlew assembleRelease
      
    - name: Upload debug APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload release APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk
        
    - name: Setup Firebase CLI
      run: |
        npm install -g firebase-tools
        firebase --version
        
    - name: Create Firebase service account file
      run: |
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
        echo "✅ Firebase service account file created"
        
    - name: Set Firebase project
      run: |
        firebase use ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
        echo "✅ Firebase project set to ${{ secrets.FIREBASE_PROJECT_ID }}"
        
    - name: Distribute APK to Firebase App Distribution
      run: |
        firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups "testers" \
          --release-notes "Build from commit ${{ github.sha }} - ${{ github.event.head_commit.message }}" \
          --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Notify testers
      run: |
        echo "📱 APK distributed to Firebase App Distribution"
        echo "🔗 App ID: ${{ secrets.FIREBASE_APP_ID }}"
        echo "👥 Testers: ${{ secrets.TESTER_EMAILS }}"
        echo "📝 Release notes: Build from commit ${{ github.sha }}"
        
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 **APK Built and Distributed!**\n\n' +
                  '✅ Debug APK: `app-debug.apk`\n' +
                  '✅ Release APK: `app-release.apk`\n' +
                  '📱 Distributed to Firebase App Distribution\n' +
                  '👥 Testers: `${{ secrets.TESTER_EMAILS }}`\n\n' +
                  '**Commit:** `${{ github.sha }}`\n' +
                  '**Message:** ${{ github.event.head_commit.message }}'
          })