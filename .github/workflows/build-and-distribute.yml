name: Build APK and Distribute to Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Setup Google Services JSON
      run: |
        echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json
        echo "Google Services JSON file created"
        
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Upload Debug APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Setup Firebase CLI
      run: |
        npm install -g firebase-tools
        
    - name: Authenticate to Firebase
      run: |
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
        firebase use ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Distribute Debug APK to Firebase App Distribution
      run: |
        firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups "testers" \
          --release-notes "Debug build - $(date '+%Y-%m-%d %H:%M:%S')" \
          --token ${{ secrets.FIREBASE_TOKEN }}
          
    - name: Distribute Release APK to Firebase App Distribution
      run: |
        firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups "testers" \
          --release-notes "Release build - $(date '+%Y-%m-%d %H:%M:%S')" \
          --token ${{ secrets.FIREBASE_TOKEN }}
          
    - name: Send Notification to Testers
      if: success()
      run: |
        echo "APK builds completed successfully and distributed to Firebase App Distribution"
        echo "Testers will receive notifications via email"
        
    - name: Cleanup
      if: always()
      run: |
        rm -f firebase-service-account.json
        rm -f app/google-services.json