name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3.2.2
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk-version: latest

    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses || true
        sdkmanager --update || true

    - name: Set up environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

    - name: Debug Environment
      run: |
        echo "=== Environment Debug ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "Java version:"
        java -version
        echo "Android SDK contents:"
        ls -la $ANDROID_HOME || echo "ANDROID_HOME not found"
        echo "Gradle version:"
        ./gradlew --version

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Test Gradle wrapper
      run: ./gradlew --version

    - name: Clean project
      run: ./gradlew clean

    - name: Build Debug APK
      run: |
        ./gradlew assembleDebug \
          --no-daemon \
          --stacktrace \
          --info \
          --warning-mode all

    - name: Verify APK exists
      run: |
        echo "Checking for APK files:"
        find . -name "*.apk" -type f
        echo "Contents of app/build/outputs/apk/debug/:"
        ls -la app/build/outputs/apk/debug/ || echo "Directory does not exist"

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: pilltracker-debug-apk
        path: app-debug.apk
        retention-days: 30
      working-directory: app/build/outputs/apk/debug